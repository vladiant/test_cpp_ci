name: Windows CMake

on: push

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment     
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake    
      shell: bash
      working-directory: ${{github.workspace}}/build      
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Run MSVC Code Analysis
      uses: microsoft/msvc-code-analysis-action@502db28262ba134c9a621d5a509b9f7e696c99b6
      # Provide a unique ID to access the sarif output path
      id: run-analysis
      with:
        cmakeBuildDirectory: ${{github.workspace}}/build
        # Ruleset file that will determine what checks will be run
        ruleset: NativeRecommendedRules.ruleset
        # Paths to ignore analysis of CMake targets and includes
        # ignoredPaths: ${{ github.workspace }}/dependencies;${{ github.workspace }}/test

    # Upload SARIF file to GitHub Code Scanning Alerts
    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.run-analysis.outputs.sarif }}

    # Upload SARIF file as an Artifact to download and view
    - name: Upload SARIF as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: sarif-file
        path: ${{ steps.run-analysis.outputs.sarif }}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Run
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: $BUILD_TYPE/SampleLibApp.exe

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE
